buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
        classpath "org.ajoberstar:gradle-git:1.3.2"
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.0.1.201506240215-r'
    }
}
apply plugin: 'groovy'
apply plugin: 'java'
// apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: "org.ajoberstar.release-opinion"

def compatibilityVersion = 1.7
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

import org.ajoberstar.grgit.Grgit
release {
    grgit = Grgit.open(project.rootProject.file('.'))
}
tasks.release.dependsOn 'build', 'bintrayUpload'
tasks.bintrayUpload.dependsOn 'jar', 'javadocJar', 'sourcesJar'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile "org.gradle:gradle-tooling-api:${gradle.gradleVersion}"
  compile "org.codehaus.mojo:nbm-maven-harness:8.2"
  runtime 'org.slf4j:slf4j-simple:1.7.5'

  testCompile "org.spockframework:spock-core:0.7-groovy-2.0", {
    exclude module: "groovy-all"
  }
  testCompile "junit:junit:4.11"
  testCompile "org.hamcrest:hamcrest-library:1.3"
  testCompile "com.google.guava:guava:14.0.1"
  testCompile group: 'xml-resolver', name: 'xml-resolver', version: '1.2'
}
repositories {
    mavenCentral()
    maven {
        url 'http://repo.gradle.org/gradle/libs-releases-local'
    }
}

sourceSets {
    integTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

def catalogPath = file('src/integTest/resources/catalog.xml').canonicalPath

task integTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    reports.junitXml.destination = file("${project.testResultsDir}/$name")
    reports.html.destination = file("${project.reporting.baseDir}/$name")

    shouldRunAfter test

    systemProperty "xml.catalog.files", catalogPath

}

task testJenkins(dependsOn: test) {
    description '=== Update the timestamp of the test results also if UP-TO-DATE ==='
    inputs.files test.outputs.files
    doLast{
        def timestamp = System.currentTimeMillis()
        testResultsDir.eachFile { it.lastModified = timestamp }
    }
}
check.dependsOn testJenkins, integTest


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'cz.kubacki.gradle.plugins'
            artifactId 'gradle-nbm-plugin'
            version project.version

            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
    repositories {
        maven {
            url uri("$buildDir/repo")
        }
    }
}

bintray {
    // Bintray upload will only work if you have BinTray credentials
    user = project.hasProperty('bintrayUser') ? project.bintrayUser : "bintray username"
    key = project.hasProperty('bintrayKey') ? project.bintrayKey : "bintray key"
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        // userOrg = 'nbandroid'
        name = 'gradle-nbm-plugin'
        licenses = ['Apache-2.0']
        desc = 'Gradle plugin to build NetBeans modules and RCP applications.'
        websiteUrl = 'https://github.com/radimk/gradle-nbm-plugin'
        issueTrackerUrl = 'https://github.com/radimk/gradle-nbm-plugin/issues'
        vcsUrl = 'https://github.com/radimk/gradle-nbm-plugin.git'
        labels = ['netbeans', 'gradle', 'build']
        version.attributes = [ 'gradle-plugin': 'cz.kubacki.nbm:cz.kubacki.gradle.plugins:gradle-nbm-plugin' ]
    }
}

idea.module {
    testSourceDirs += file('src/integTest/groovy')
}
